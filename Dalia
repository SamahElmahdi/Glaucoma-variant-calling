#Activate the NGS1 enviroment
conda activate ngs1
#Create a new directory for the project
mkdir glucoma
#Download & install SRA tools according to NCBI guide (SRA tools are required to extract a fraction of the reads to work on)
wget "ftp://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-centos_linux64.tar.gz"
tar -xzf sratoolkit.current-centos_linux64.tar.gz
#Install sra tool kit according to the manual
./fastq-dump
sudo apt sudo apt sratoolkit
#Download 8 million reads for PCAG control "SRR5858161" using the following command:
fastq-dump -I --split-files -X 8000000 SRR5858161
#Install the software
conda install -c bioconda fastqc 
conda install -c bioconda multiqc
Run fastqc on the downloaded 8 million reads in fastq format
for f in ~/glucoma/*.fastq;do fastqc -t 1 -f fastq $f;done
##QC reports can be found here: https://github.com/SamahElmahdi/Glaucoma-variant-calling/blob/master/SRR5858161_fastqc.zip
#create a new directory for the chromosomes
mkdir chr && cd chr
#Download the reference chromosome "chromosome 20"
wget ftp://ftp.ensembl.org/pub/release-99/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.20.fa.gz
#Download chromosome 11
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg38/chromosomes/chr11.fa.gz
#Download chromosome 6
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg38/chromosomes/chr6.fa.gz 
#Download chromosome 3
wget http://hgdownload.soe.ucsc.edu/goldenPath/hg38/chromosomes/chr3.fa.gz
#combine the 4 fasta files in one fasta file
zcat *.fa.gz > combined_chr.fa.gz
#Unzip it
gunzip -k combined_chr.fa.gz
#make the annotation gtf file for chromosomes 3,6,11 and 20
grep "^#" Homo_sapiens.GRCh38.99.chr.gtf > Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf
grep "^3" Homo_sapiens.GRCh38.99.chr.gtf >> Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf
grep "^11" Homo_sapiens.GRCh38.99.chr.gtf >> Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf
grep "^6" Homo_sapiens.GRCh38.99.chr.gtf >> Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf
grep "^20" Homo_sapiens.GRCh38.99.chr.gtf >> Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf
##Hisat2
#indexing
ln -s ~/glucoma/chr/combined.fa .
hisat2_extract_splice_sites.py ~/glucoma/Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf > splicesites.tsv
hisat2_extract_exons.py ~/glucoma/Homo_sapiens.GRCh38.99.chr_3_11_6_20.gtf > exons.tsv
hisat2-build -p 1 --ss splicesites.tsv --exon exons.tsv combined.fa combined
#Aligning
cd ~/glucoma/hisat_align
R1="$HOME/glucoma/SRR5858161_1.fastq"
R2="$HOME/glucoma/SRR5858161_2.fastq"
hisat2 -p 1 -x hisatIndex/combined --dta --rna-strandness RF -1 $R1 -2 $R2 -S gluc_Rep1.sam
#************** Hisat2 kept terminating due to the huge file sizes, so we will use chromosome 20 only as an index ***************
#indexing
ln -s ~/glucoma/chr/Homo_sapiens.GRCh38.dna.chromosome.20.fa .
hisat2_extract_splice_sites.py ~/glucoma/Homo_sapiens.GRCh38.99.chr20.gtf > splicesites.tsv
hisat2_extract_exons.py ~/glucoma/Homo_sapiens.GRCh38.99.chr20.gtf > exons.tsv
hisat2-build -p 1 --ss splicesites.tsv --exon exons.tsv Homo_sapiens.GRCh38.dna.chromosome.20.fa Homo_sapiens.GRCh38.dna.chromosome.20
#Aligning
cd ~/glucoma/hisat_align
R1="$HOME/glucoma/SRR5858161_1.fastq"
R2="$HOME/glucoma/SRR5858161_2.fastq"
hisat2 -p 1 --rg ID:SRR5858161_F7_II.2 --rg SM:SRR5858161_F7_II.2 --rg PL:ILLUMINA --rg LB:SRR5858161_F7_II.2 --rg PU:SRR5858161_F7_II.2 -x ~/glucoma/Homo_sapiens.GRCh38.dna.chromosome.20 -1 $R1 -2 $R2 -S SRR5858161.sam

##################### Alignment report showed the following ######################
# 8000000 reads; of these:                                                       #     
#  8000000 (100.00%) were paired; of these:                                      #
#   7842195 (98.03%) aligned concordantly 0 times                                #
#   153527 (1.92%) aligned concordantly exactly 1 time                           #
#    4278 (0.05%) aligned concordantly >1 times                                  #
#    ----                                                                        #
#    7842195 pairs aligned concordantly 0 times; of these:                       #
#      5098 (0.07%) aligned discordantly 1 time                                  #
#    ----                                                                        #
#    7837097 pairs aligned 0 times concordantly or discordantly; of these:       #
#      15674194 mates make up the pairs; of these:                               # 
#        15613792 (99.61%) aligned 0 times                                       #
#        55309 (0.35%) aligned exactly 1 time                                    #
#        5093 (0.03%) aligned >1 times                                           # 
# 2.41% overall alignment rate                                                   #
##################################################################################
#Generating and sorting BAM file:
for samfile in *.sam;do
  sample=${samfile%.sam}
  samtools view -hbo $sample.bam $samfile
  samtools sort $sample.bam -o $sample.sorted.bam
done
#Mapping QC:
for bamFile in *.sorted.bam;do
  output=${bamFile%.sorted.bam}
  samtools depth $bamFile | awk '{{sum+=$3}} END {{print "Average = ",sum/NR, "No of covered Nuc = ", NR}}' > $output.cov
  samtools flagstat $bamFile > $output.stat
done
#Stat file can be found here: https://github.com/SamahElmahdi/Glaucoma-variant-calling/blob/master/SRR5858161.stat
#Install Picard tools
conda install -c bioconda picard 
picard_path=$CONDA_PREFIX/share/picard-* ## 2.21.7-0
#Mark Duplicate reads:
java  -Xmx2g -jar $picard_path/picard.jar MarkDuplicates INPUT=SRR5858161 OUTPUT=SRR5858161.dedup.bam METRICS_FILE=SRR5858161.metrics.txt;
done
#Metrics file can be found here: https://github.com/SamahElmahdi/Glaucoma-variant-calling/blob/master/SRR5858161.metrics.txt
#Install GATK4
conda install -c bioconda gatk4 
#Indexing:
#samples
java -Xmx2g -jar $picard_path/picard.jar BuildBamIndex VALIDATION_STRINGENCY=LENIENT INPUT=SRR5858161.dedup.bam
#Reference
ln -s ~/glucoma/Homo_sapiens.GRCh38.dna.chromosome.20.fa
java -Xmx2g -jar $picard_path/picard.jar CreateSequenceDictionary R=Homo_sapiens.GRCh38.dna.chromosome.20.fa O=Homo_sapiens.GRCh38.dna.chromosome.20.dict
samtools faidx Homo_sapiens.GRCh38.dna.chromosome.20.fa
#Download known polymorphic sites
wget ftp://ftp.ensembl.org/pub/release-99/variation/vcf/homo_sapiens/homo_sapiens-chr20.vcf.gz
gunzip -k homo_sapiens-chr20.vcf.gz
#Indexing the known variants file:
gatk IndexFeatureFile -I homo_sapiens-chr20.vcf
##The tutorial contains a step for selecting known variants on a certain chromosome, we do not need to run this step as our downloaded file contains knwon variants on chromosome 20 only.
#Recalibrate bases BQSR
#BaseRecalibrator Tool: builds a model of covariation based on the data and a set of known variants.
gatk --java-options "-Xmx2G" BaseRecalibrator \
-R Homo_sapiens.GRCh38.dna.chromosome.20.fa -I SRR5858161.dedup.bam --known-sites homo_sapiens-chr20.vcf \
-O SRR5858161.report
#Apply BQSR Tool: adjusts the base quality scores in the data based on the model.
gatk --java-options "-Xmx2G" ApplyBQSR \
-R Homo_sapiens.GRCh38.dna.chromosome.20.fa -I SRR5858161.dedup.bam -bqsr SRR5858161.report \ 
-O SRR5858161.bqsr.bam --add-output-sam-program-record --emit-original-quals
#The report can be found here: https://github.com/SamahElmahdi/Glaucoma-variant-calling/blob/master/SRR5858161.report
#Joint variant calling using HaplotypeCaller:
## assess genotype likelihood per-sample
gatk --java-options "-Xmx2G" HaplotypeCaller \
  -R Homo_sapiens.GRCh38.dna.chromosome.20.fa -I SRR5858161.bqsr.bam \
  --emit-ref-confidence GVCF \
  --pcr-indel-model NONE \
  -O SRR5858161.gvcf
#The resulting gvcf file can be found here: https://github.com/SamahElmahdi/Glaucoma-variant-calling/blob/master/SRR5858161.zip

###Starting from sample combination till the statistical analysis >> the code was run on only one computer by our team leader, The run code is shown below### 
## 2 samples (SRR5858204.gvcf & RR5858157.gvcf) and 2 controls (SRR5858160.gvcf & SRR5858161.gvcf) which done by my colleagues \
was uploaded to the machine for the compination with the fifth one ( sample (SRR5858162.gvcf)). 
## combine samples
gatk --java-options "-Xmx2G" CombineGVCFs -R Homo_sapiens.GRCh38.dna.chromosome.20.fa -V SRR5858162.gvcf \
-V SRR5858204.gvcf -V SRR5858157.gvcf -V SRR5858160.gvcf -V SRR5858161.gvcf -O raw_variants.gvcf
## Joint Genotyping with annotated output 
gatk --java-options "-Xmx60G" GenotypeGVCFs -R Homo_sapiens.GRCh38.dna.chromosome.20.fa \
-V raw_variants.gvcf --max-alternate-alleles 2 --dbsnp homo_sapiens-chr20.vcf -O raw_variants_ann.vcf
## check how many variant got annotated
grep -v "^#" raw_variants_ann.vcf | awk '{print $3}' | grep "^rs" | wc -l
###10900 known variants
## check no of all vaiants
grep -v "^#" raw_variants_ann.vcf | awk '{print $3}' | wc -l
###35472 all variants
## VCF statitics
## Index the VCF file
# conda install -c bioconda tabix
bgzip -c raw_variants_ann.vcf > raw_variants_ann.vcf.gz
tabix -p vcf raw_variants_ann.vcf.gz
## Calc some stats about your vcf
# conda install -c bioconda rtg-tools
rtg vcfstats raw_variants_ann.vcf.gz > stats.txt
## Split SNPs and indels
gatk --java-options "-Xmx2G" SelectVariants -R Homo_sapiens.GRCh38.dna.chromosome.20.fa \
-V raw_variants_ann.vcf --select-type-to-include SNP -O raw_variants_ann_SNP.vcf
gatk --java-options "-Xmx2G" SelectVariants -R Homo_sapiens.GRCh38.dna.chromosome.20.fa \
-V raw_variants_ann.vcf --select-type-to-include INDEL -O raw_variants_ann_INDEL.vcf
## Assess the different filters in both known and novel
for var in "SNP" "INDEL";do
 input="raw_variants_ann_"$var".vcf"
 for filter in "QD" "MQ" "MQRankSum" "FS" "SOR" "ReadPosRankSum" "AN" "DP";do
  filterValues=$var.$filter
  awk -v k="$filter=" '!/#/{n=split($8,a,";"); for(i=1;i<=n;i++) if(a[i]~"^"k) {sub(k,$3" ",a[i]); print a[i]}}' $input > $filterValues
  grep -v "^\." $filterValues > known.$var.$filter
  grep "^\." $filterValues > novel.$var.$filter
done; done
## creating directory for filters
mkdir filters && cd filters
mv ../{*.SNP.*,SNP.*,*.INDEL.*,INDEL.*} .
# downloading densityCurves.R script and installing plotting packages
wget https://raw.githubusercontent.com/dib-lab/dogSeq/master/scripts/densityCurves.R
Rscript -e "install.packages('ggplot2', contriburl=contrib.url('http://cran.r-project.org/'))"
# plotting Figures
for f in SNP.* INDEL.*;do
  Rscript densityCurves.R "$f"
done
***************# Calc the DP threathols
cat SNP.DP INDEL.DP | awk '{sum+= $2; sumsq+= ($2)^2} END { print sum/NR, sqrt((sumsq-sum^2/NR)/NR), sum/NR + 5*sqrt((sumsq-sum^2/NR)/NR) }' 
###48.7602 92.8051 512.786
